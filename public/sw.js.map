{
  "version": 3,
  "sources": ["../node_modules/swtl/symbol.js", "../node_modules/swtl/html.js", "../node_modules/swtl/await.js", "../node_modules/swtl/render.js", "../node_modules/swtl/router.js", "../node_modules/swtl/slot.js", "../env.js", "../src/Html.js", "../src/utils.js", "../router.js", "../sw.js"],
  "sourcesContent": ["export const COMPONENT_SYMBOL = Symbol('component');\nexport const AWAIT_SYMBOL = Symbol('await');\nexport const SLOT_SYMBOL = Symbol('slot');", "import { COMPONENT_SYMBOL } from './symbol.js';\n\nconst TEXT = 'TEXT';\nconst COMPONENT = 'COMPONENT';\n\nconst NONE = 'NONE';\nconst PROP = 'PROP';\nconst CHILDREN = 'CHILDREN';\n\nconst SET_PROP = 'SET_PROP';\nconst PROP_VAL = 'PROP_VAL';\n\nexport function* html(statics, ...dynamics) {\n  /**\n   * If no dynamics, just return statics\n   */\n  if (!dynamics.length) {\n    yield* statics;\n  /**\n   * If no Components, just stitch statics and dynamics together\n   */\n  } else if (!dynamics.some(d => typeof d === 'function')) {\n    yield* statics.reduce((acc, s, i) => [...acc, s, ...(dynamics.length > i ? [dynamics[i]] : [])], []);\n  } else {\n    let MODE = TEXT;\n    let COMPONENT_MODE = NONE;\n    let PROP_MODE = NONE;\n  \n    const componentStack = [];\n  \n    /**\n     * @example\n     * source        = html`<h1>${1}</h1>`\n     * statics       = ['<h1>','</h1>'], \n     * dynamics      = [1]\n     */\n    for (let i = 0; i < statics.length; i++) {\n      let result = \"\";\n      const component = {\n        kind: COMPONENT_SYMBOL,\n        slots: {},\n        properties: [],\n        children: [],\n        fn: undefined,\n      };\n  \n      /**\n       * @example\n       * source        = html`<h1>${1}</h1>`\n       * statics       = ['<h1>','</h1>'], \n       * dynamics      = [1]\n       * \n       * statics[i]    = '<h1>'\n       * statics[i][j] = '<'\n       */\n      for (let j = 0; j < statics[i].length; j++) {\n        let c = statics[i][j];\n        if (MODE === TEXT) {\n          if (\n            c === \"<\" &&\n            /**\n             * @example <${Foo}>\n             *           ^\n             */\n            !statics[i][j + 1] && typeof dynamics[i] === \"function\"\n          ) {\n            MODE = COMPONENT;\n            component.fn = dynamics[i];\n            componentStack.push(component);\n          } else {\n            result += c;\n          }\n        } else if (MODE === COMPONENT) {\n          if (COMPONENT_MODE === PROP) {\n            const component = componentStack[componentStack.length - 1];\n            const property = component?.properties[component.properties.length - 1];\n            if (PROP_MODE === SET_PROP) {\n              let property = \"\";\n              while (\n                statics[i][j] !== \"=\" &&\n                statics[i][j] !== \"/\" &&\n                statics[i][j] !== \">\" &&\n                statics[i][j] !== '\"' &&\n                statics[i][j] !== \"'\" &&\n                statics[i][j] !== \" \" &&\n                property !== '...'\n              ) {\n                property += statics[i][j];\n                j++;\n              }\n  \n              /**\n               * @example <${Foo} foo=\"bar\">\n               *                     ^\n               */\n              if (statics[i][j] === \"=\") {\n                PROP_MODE = PROP_VAL;\n                /**\n                 * @example <${Foo} foo/>\n                 *                     ^\n                 */\n              } else if (statics[i][j] === \"/\" && COMPONENT_MODE === PROP) {\n                COMPONENT_MODE = NONE;\n                PROP_MODE = NONE;\n                const component = componentStack.pop();\n                if (!componentStack.length) {\n                  result = '';\n                  yield component;\n                }\n                /**\n                 * @example <${Foo} foo>children</a>\n                 *                     ^\n                 */\n              } else if (statics[i][j] === \">\" && COMPONENT_MODE === PROP) {\n                COMPONENT_MODE = CHILDREN;\n                PROP_MODE = NONE;\n              }\n  \n              if (property === '...') {\n                component.properties.push(...Object.entries(dynamics[i]).map(([name,value])=> ({name, value})));\n              } else if (property) {\n                component.properties.push({name: property, value: true});\n              }\n            } else if (PROP_MODE === PROP_VAL) {\n              /**\n               * @example <${Foo} bar='hi'>\n               *                      ^\n               * @example <${Foo} bar='${1}'>\n               *                      ^\n               * @example <${Foo} bar=\"hi\">\n               *                      ^\n               * @example <${Foo} bar=\"${1}\">\n               *                      ^\n               */\n              if (statics[i][j] === '\"' || statics[i][j] === \"'\") {\n                const quote = statics[i][j];\n                /**\n                 * @example <${Foo} bar=\"${1}\">\n                 *                       ^^^^\n                 */\n                if (!statics[i][j + 1]) {\n                  property.value = dynamics[i];\n                  PROP_MODE = SET_PROP;\n                } else {\n                  /**\n                   * @example <${Foo} bar=\"hi\">\n                   *                       ^^\n                   * @example <${Foo} bar='hi'>\n                   *                       ^^\n                   */\n                  let val = '';\n                  j++; // account for quote\n                  while(statics[i][j] !== quote) {\n                    val += statics[i][j];\n                    j++;\n                  }\n  \n                  property.value = val || '';\n                  PROP_MODE = SET_PROP;\n                }\n                /**\n                 * @example <${Foo} bar=${1}>\n                 *                          ^\n                 */\n              } else if (!statics[i][j - 1]) {\n                property.value = dynamics[i - 1];\n                PROP_MODE = SET_PROP;\n\n                if(statics[i][j] === '>') {\n                  PROP_MODE = NONE;\n                  COMPONENT_MODE = CHILDREN;\n                  /**\n                   * @example <${Foo} bar=${1}/>\n                   *                          ^\n                   * Yield if we finished the component\n                   */\n                } else if (statics[i][j] === '/') {\n                  const component = componentStack.pop();\n                  if (!componentStack.length) {\n                    PROP_MODE = NONE;\n                    COMPONENT_MODE = NONE;\n                    MODE = TEXT;\n                    j++;\n                    yield component;\n                  }\n                }\n              } else {\n                /**\n                 * @example <${Foo} bar=hi>\n                 *                        ^\n                 * @example <${Foo} bar=hi/>\n                 *                        ^\n                 * @example <${Foo} bar=hi baz>\n                 *                        ^\n                 */\n                let val = '';\n                while(\n                  statics[i][j] !== ' ' &&\n                  statics[i][j] !== '/' &&\n                  statics[i][j] !== '>'\n                ) {\n                  val += statics[i][j];\n                  j++;\n                }\n  \n                property.value = val || '';\n                PROP_MODE = SET_PROP;\n  \n                /**\n                 * @example <${Foo} bar=hi/>\n                 *                        ^\n                 * Yield if we finished the component\n                 */\n                if (statics[i][j] === '/') {\n                  const component = componentStack.pop();\n                  if (!componentStack.length) {\n                    yield component;\n                  }\n                }\n              }\n            }\n          } else if (COMPONENT_MODE === CHILDREN) {\n            const currentComponent = componentStack[componentStack.length - 1];\n  \n            /**\n             * @example <${Foo}>children<//>\n             *                           ^^\n             */\n            if (statics[i][j] === \"<\" && statics[i][j + 1] === \"/\" && statics[i][j + 2] === \"/\") {\n              if (result) {\n                currentComponent.children.push(result);\n                result = '';\n              }\n  \n              j += 3;\n              /**\n               * If there are no components on the stack, this is a top level\n               * component, and we can yield\n               */\n              const component = componentStack.pop();\n              if (!componentStack.length) {\n                MODE = TEXT;\n                COMPONENT_MODE = NONE;\n                yield component;\n              }\n            } else if (statics[i][j] === '<' && !statics[i][j + 1] && typeof dynamics[i] === 'function') {\n              /**\n               * If the next child is a component, we need to push to children what we have\n               */\n              if (result) {\n                currentComponent.children.push(result);\n                result = '';\n              }\n              COMPONENT_MODE = PROP;\n              PROP_MODE = SET_PROP;\n              component.fn = dynamics[i];\n              componentStack.push(component);\n            } else if (!statics[i][j+1]) {\n              /**\n               * @example <${Foo}><h1>hi ${2}</h1><//>\n               *                  ^^^^^^^       \n               */\n              if (result && currentComponent) {\n                result += statics[i][j];\n                currentComponent.children.push(result);\n              }\n            } else {\n              result += statics[i][j];\n            }\n  \n          } else if (c === \">\") {\n            COMPONENT_MODE = CHILDREN;\n          } else if (c === \" \") {\n            COMPONENT_MODE = PROP;\n            PROP_MODE = SET_PROP;\n            /** self closing tag */\n          } else if (c === \"/\" && statics[i][j + 1] === \">\") {\n            MODE = TEXT;\n            COMPONENT_MODE = NONE;\n            /**\n             * If there are no components on the stack, this is a top level\n             * component, and we can yield\n             */\n            const component = componentStack.pop();\n            if (!componentStack.length) {\n              result = '';\n              yield component;\n            }\n            j++;\n          } else {\n            result += c;\n          }\n        } else {\n          result += c;\n        }\n      }\n  \n      if (COMPONENT_MODE === CHILDREN && dynamics.length > i) {\n        const currentComponent = componentStack[componentStack.length - 1];\n        currentComponent.children.push(dynamics[i]);\n      }\n\n      if (result && COMPONENT_MODE !== CHILDREN) {\n        yield result;\n      }\n  \n      if (componentStack.length > 1 && component.fn) {\n        componentStack[componentStack.length - 2].children.push(component)\n      }\n  \n      // We're at the end of statics, now process dynamics if there are any\n      if (dynamics.length > i && MODE !== COMPONENT) {\n        yield dynamics[i];\n      }\n    }\n  }\n}\n", "import { AWAIT_SYMBOL } from './symbol.js';\n\nfunction Await({promise, children}) {\n  return { \n    promise, \n    template: children.find(c => typeof c === 'function')\n  };\n}\n\nAwait.kind = AWAIT_SYMBOL;\n\nconst when = (condition, template) => condition ? template() : '';\n\nexport { Await, when };", "import { html } from './html.js';\nimport { SLOT_SYMBOL, AWAIT_SYMBOL, COMPONENT_SYMBOL } from \"./symbol.js\";\n\nfunction hasGetReader(obj) {\n  return typeof obj.getReader === \"function\";\n}\n\nexport async function* streamAsyncIterator(stream) {\n  const reader = stream.getReader();\n  const decoder = new TextDecoder(\"utf-8\");\n\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) return;\n      yield decoder.decode(value);\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nasync function* handleIterator(iterable) {\n  if (hasGetReader(iterable)) {\n    for await (const chunk of streamAsyncIterator(iterable)) {\n      yield chunk;\n    }\n  } else {\n    for await (const chunk of iterable) {\n      yield chunk;\n    }\n  }\n}\n\nexport async function* handle(chunk, promises) {\n  if (typeof chunk === \"string\") {\n    yield chunk;\n  } else if (typeof chunk === \"function\") {\n    yield* handle(chunk(), promises);\n  } else if (Array.isArray(chunk)) {\n    yield* _render(chunk, promises);\n  } else if (typeof chunk?.then === \"function\") {\n    const v = await chunk;\n    yield* handle(v, promises);\n  } else if (chunk instanceof Response && chunk.body) {\n    yield* handleIterator(chunk.body);\n  } else if (chunk?.[Symbol.asyncIterator] || chunk?.[Symbol.iterator]) {\n    yield* _render(chunk, promises);\n  } else if (chunk?.fn?.kind === AWAIT_SYMBOL) {\n    const { promise, template } = chunk.fn({\n      ...chunk.properties.reduce((acc, prop) => ({...acc, [prop.name]: prop.value}), {}),\n      children: chunk.children,\n    });\n    const id = promises.length;\n    promises.push(\n      promise()\n        .then(data => ({\n          id,\n          template: template({pending: false, error: false, success: true}, data, null) \n        }))\n        .catch(error => {\n          console.error(error.stack);\n          return {\n            id,\n            template: template({pending: false, error: true, success: false}, null, error) \n          }\n        })\n    );\n    yield* _render(html`<awaiting-promise style=\"display: contents;\" data-id=\"${id.toString()}\">${template({pending: true, error: false, success: false}, null, null)}</awaiting-promise>`, promises);\n  } else if (chunk?.kind === COMPONENT_SYMBOL) {\n    const children = [];\n    const slots = {};\n    for (const child of chunk.children) {\n      if (child?.fn?.kind === SLOT_SYMBOL) {\n        const name = child.properties.find(prop => prop.name === 'name')?.value || 'default';\n        slots[name] = child.children;\n      } else {\n        children.push(child);\n      }\n    }\n\n    yield* handle(\n      await chunk.fn({\n        ...chunk.properties.reduce((acc, prop) => ({...acc, [prop.name]: prop.value}), {}),\n        children,\n        slots\n      }),\n      promises\n    );\n  } else {\n    const stringified = chunk?.toString();\n    if(stringified === '[object Object]') {\n      yield JSON.stringify(chunk);\n    } else {\n      yield stringified;\n    }\n  }\n}\n\nasync function* _render(template, promises) {\n  for await (const chunk of template) {\n    yield* handle(chunk, promises);\n  }\n}\n\nexport async function* render(template) {\n  let promises = [];\n\n  yield* _render(template, promises);\n\n  promises = promises.map(promise => {\n    let p = promise.then(val => {\n      promises.splice(promises.indexOf(p), 1);\n      return val;\n    });\n    return p;\n  });\n\n  while (promises.length > 0) {\n    const nextPromise =  await Promise.race(promises);\n    const { id, template } = nextPromise;\n\n    yield* render(html`\n      <template data-id=\"${id.toString()}\">${template}</template>\n      <script>\n        {\n          let toReplace = document.querySelector('awaiting-promise[data-id=\"${id.toString()}\"]');\n          const template = document.querySelector('template[data-id=\"${id.toString()}\"]').content.cloneNode(true);\n          toReplace.replaceWith(template);\n        }\n      </script>\n    `)\n  }\n}\n\nexport async function renderToString(renderResult) {\n  let result = \"\";\n\n  for await (const chunk of render(renderResult)) {\n    result += chunk;\n  }\n\n  return result;\n}\n", "import { render } from './render.js';\n\nexport class Router {\n  constructor({ \n    routes, \n    fallback, \n    plugins = [], \n    baseHref = '' \n  }) {\n    this.plugins = plugins;\n    this.fallback = {\n      render: fallback,\n      params: {}\n    };\n    this.routes = routes.map(route => ({\n      ...route,\n      urlPattern: new URLPattern({\n        pathname: `${baseHref}${route.path}`,\n        search: '*',\n        hash: '*',\n      })\n    }));\n  }\n\n  _getPlugins(route) {\n    return [\n      ...(this.plugins ?? []), \n      ...(route?.plugins ?? []),\n    ]\n  }\n\n  async handleRequest(request) {\n    const url = new URL(request.url);\n    let matchedRoute;\n\n    for (const route of this.routes) {\n\n      const match = route.urlPattern.exec(url);\n      if(match) {\n        matchedRoute = {\n          options: route.options,\n          render: route.render,\n          params: match?.pathname?.groups ?? {},\n          plugins: route.plugins,\n        };\n        break;\n      }\n    }\n\n    const route = matchedRoute?.render ?? this?.fallback?.render;\n    if (route) {\n      const url = new URL(request.url);\n      const query = Object.fromEntries(new URLSearchParams(url.search));\n      const params = matchedRoute?.params;\n\n      const plugins = this._getPlugins(matchedRoute);\n      for (const plugin of plugins) {\n        try {\n          const result = await plugin?.beforeResponse({url, query, params, request});\n          if (result) {\n            return result;\n          }\n        } catch(e) {\n          console.log(`Plugin \"${plugin.name}\" error on beforeResponse hook`, e);\n          throw e;\n        }\n      }\n\n      return new HtmlResponse(await route({url, query, params, request}), matchedRoute?.options ?? {});\n    }\n  }\n}\n\nexport class HtmlResponse {\n  constructor(template, options = {}) {\n    const iterator = render(template);\n    const encoder = new TextEncoder();\n    const stream = new ReadableStream({\n      async pull(controller) {\n        try {\n          const { value, done } = await iterator.next();\n          if (done) {\n            controller.close();\n          } else {\n            controller.enqueue(encoder.encode(value));\n          }\n        } catch(e) {\n          console.error(e.stack);\n          throw e;\n        }\n      }\n    });\n\n    return new Response(stream, { \n      status: 200,\n      headers: { \n        'Content-Type': 'text/html', \n        'Transfer-Encoding': 'chunked', \n        ...(options?.headers ?? {})\n      },\n      ...options\n    });\n  }\n}", "import { SLOT_SYMBOL } from './symbol.js';\n\nfunction Slot() {}\n\nSlot.kind = SLOT_SYMBOL;\n\nexport { Slot };", "export const ENV = !!globalThis?.Netlify ? 'server' : 'worker';", "import { html } from 'swtl';\nimport { ENV } from '../env.js';\n\nexport function Html({title, children, slots}) {\n  return html`\n    <!DOCTYPE html>\n    <html lang=\"en\">\n      <head>\n        <meta charset=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,viewport-fit=cover\">\n        <meta name=\"Description\" content=\"Passle blog\">\n        <title>${title ?? ''}</title>\n\n        ${slots?.head ?? ''}\n        <style>\n          body {\n            font-family: system-ui;\n            font-size: 1.15em;\n          }\n\n          header,\n          main,\n          footer {\n            max-width: 800px;\n            margin-left: auto;\n            margin-right: auto;\n          }\n\n          h1 a {\n            text-decoration: none;\n            color: white;\n          }\n\n          *:focus {\n            outline: solid 2px blue;\n          }\n\n          .shiki {\n            padding: 20px;\n            line-height: 1.5em;\n            border: solid 2px black;\n            transition: box-shadow 0.2s ease-in-out;\n          }\n\n          nav {\n            margin-left: auto;\n            margin-right: auto;\n            max-width: 300px;\n          }\n\n          nav ul {\n            display: flex;\n            justify-content: center;\n            margin: 0;\n            padding: 0;\n            list-style: none;\n          }\n\n          nav ul li {\n            margin: 10px;\n          }\n\n          h1 {\n            color: white;\n            margin-top: 60px;\n\n            text-shadow:\n            2px 2px 0 #000,\n            -1px -1px 0 #000,  \n            1px -1px 0 #000,\n            -1px 1px 0 #000,\n            1px 1px 0 #000;\n            text-align: center;\n          }\n\n          h2 {\n            text-align: center;\n          }\n\n          a {\n            color: blue;\n            font-weight: 700;\n            text-decoration: none;\n          }\n\n          a:hover,\n          a:focus {\n            text-decoration: underline;\n          }\n\n          footer {\n            flex-direction: row;\n            border-top: solid 2px black;\n            display: flex;\n            gap: 60px;\n            padding: 20px;\n            margin-top: 80px;\n            margin-bottom: 80px;\n          }\n\n          footer div > p {\n            margin-top: 0px;\n          }\n\n          .social-links {\n            list-style: none;\n            padding: 0;\n            margin: 0;\n          }\n\n          main ul {\n            list-style: none;\n            margin: 0;\n            padding: 0;\n          }\n\n          main li.overview-li a {\n            padding: 16px;\n            display: block;\n            border: solid 2px black;\n            margin-top: 20px;\n            margin-bottom: 20px;\n            text-decoration: none;\n            box-shadow: 3px 3px 3px black;\n            transition: box-shadow 0.2s ease-in-out;\n          }\n\n          pre {\n            overflow: auto;\n          }\n\n          blockquote {\n            border-left: solid 2px black;\n            font-style: italic;\n            margin-left: 0;\n            margin-right: 0;\n            padding-left: 20px;\n            padding-right: 20px;\n            font-size: 18px;\n          }\n\n          article img {\n            max-width: 500px;\n            margin-left: auto;\n            margin-right: auto;\n            display: block;\n          }\n          \n          main li.overview-li a:focus,\n          main li.overview-li a:hover {\n            box-shadow: 6px 6px 6px black;\n          }\n\n          .overview-item {\n            color: black;\n            text-decoration: none;\n          }\n\n          .overview-item h3 {\n            color: blue;\n            margin-bottom: 12px;\n          }\n\n          .date {\n            margin-top: 0px;\n            font-size: 12px;\n          }\n          \n          .description {\n            font-weight: 500;\n          }\n\n          .blog,\n          .thoughts {\n            font-weight: 700;\n          }\n          \n          .post h2 a,\n          .post h3 a,\n          .post h4 a,\n          .post h5 a,\n          .post h6 a {\n            color: black;\n          }\n\n          .post h2 a:hover,\n          .post h2 a:focus,\n          .post h3 a:hover,\n          .post h3 a:focus,\n          .post h4 a:hover,\n          .post h4 a:focus,\n          .post h5 a:hover,\n          .post h5 a:focus,\n          .post h6 a:hover,\n          .post h6 a:focus {\n            color: blue;\n          }\n\n          .post {\n            border: solid 2px black;\n            padding: 20px;\n            box-shadow: 3px 3px 3px black;\n            margin-top: 40px;\n          }\n\n          .larger-text {\n            line-height: 1.45em;\n            font-size: 22px;\n          }\n\n          .post ul {\n            list-style: initial;\n            padding-left: 20px;\n          }\n\n          .post p {\n            line-height: 1.45em;\n          }\n\n          .post p code {\n            font-weight: 700;\n          }\n\n          .post dt {\n            font-weight: 700;\n          }\n\n          :target + dd {\n            text-decoration: underline;\n          }\n\n          .post-loading-title {\n            height: 1.5em;\n            width: 60%;\n            background-color: #eee;\n            margin-top: 30px;\n            margin-bottom: 30px;\n            margin-left: auto;\n            margin-right: auto;\n          }\n\n          .post-loading-bar {\n            height: 1em;\n            width: 100%;\n            background-color: #eee;\n            margin-top: 12px;\n            margin-bottom: 12px;\n          }\n\n          @media (max-width: 600px) {\n            nav {\n              margin-left: auto;\n              margin-right: auto;\n            }\n\n            article img {\n              max-width: 320px;\n            }\n\n            footer {\n              flex-direction: column-reverse;\n              gap: 10px;\n              padding: 12px;\n            }\n\n            footer div {\n              margin-top: 10px;\n            }\n          }\n\n        </style>\n      </head>\n      <body>\n        <header>\n          <h1><a href=\"/\">PASSLE</a></h1>\n          <nav>\n            <ul>\n              <li><a href=\"/blog\">Blogs</a></li>\n              <li><a href=\"/thoughts\">Thoughts</a></li>\n              <li><a href=\"/definitions\">Definitions</a></li>\n            </ul>\n          </nav>\n        </header>\n        <main>\n          ${children}\n        </main>\n        <footer>\n          <ul class=\"social-links\">\n            <li><a target=\"_blank\" href=\"https://github.com/thepassle\">Github</a></li>\n            <li><a target=\"_blank\" href=\"https://mastodon.social/@passle\">Mastodon</a></li>\n            <li><a target=\"_blank\" href=\"https://twitter.com/passle_\">Twitter</a></li>\n            <li><a target=\"_blank\" href=\"/rss\">RSS</a></li>\n          </ul>\n          <div>\n            <p>This blog was rendered ${ENV === 'server' ? 'on the server' : 'in a service worker'}</p>\n            <p>The source for this blog can be found <a target=\"_blank\" href=\"https://github.com/thepassle/blog\">here</a>, please feel free to steal it and use it for your own projects</p>\n          </div>\n        </footer>\n      </body>\n      <script>\n        navigator.serviceWorker.register('/sw.js').then((registration) => {\n          console.log('Service worker registered successfully', registration);\n\n          if (!navigator.serviceWorker.controller && ${ENV === 'worker'}) {\n            navigator.serviceWorker.addEventListener('message', (event) => {\n              if (event?.data?.type === 'SW_ACTIVATED') {\n                window.location.reload();\n              }\n            });\n          }\n        }).catch((err) => {\n          console.log('Service worker registration failed: ', err);\n        });\n\n        let refreshing;\n        async function handleUpdate() {\n          // check to see if there is a current active service worker\n          const oldSw = (await navigator.serviceWorker.getRegistration())?.active?.state;\n\n          navigator.serviceWorker.addEventListener('controllerchange', async () => {\n            if (refreshing) return;\n\n            // when the controllerchange event has fired, we get the new service worker\n            const newSw = (await navigator.serviceWorker.getRegistration())?.active?.state;\n\n            // if there was already an old activated service worker, and a new activating service worker, do the reload\n            if (oldSw === 'activated' && newSw === 'activating') {\n              refreshing = true;\n              window.location.reload();\n            }\n          });\n        }\n\n        handleUpdate();\n\n      </script>\n    </html>\n  `\n}", "export function title(title) {\n  const str = title.toLowerCase().split('-').join(' ');\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n", "import { html, Router, Slot, Await, when } from 'swtl';\nimport { Html } from './src/Html.js';\nimport { title } from './src/utils.js';\nimport { ENV } from './env.js';\n\nfunction RenderPost({promise}) {\n  return html`\n    <${Await} promise=${() => promise.then(b => b.text())}>\n      ${(status, data, error) => html`\n        ${when(status.pending, () => html`\n          <div class=\"post-loading-title\"></div>\n          <div class=\"loading-content\">\n            ${Array.from({ length: Math.floor(Math.random() * 11) + 5 }, () => Math.random()).map(i => html`\n              <div style=\"width: ${Math.floor(Math.random() * 11) + 90}%\" class=\"post-loading-bar\"></div>\n            `)}\n          </div>\n        `)}\n        ${when(status.error, () => html`<p>Failed to fetch blog.</p>`)}\n        ${when(status.success, () => data)}\n      `}\n    <//>\n  `\n}\n\nexport const router = new Router({\n  routes: [\n    {\n      path: '/',\n      render: ({url, params, query, request}) => { \n        const overview = fetch(url.origin + '/output/overview.html');\n\n        return html`\n          <${Html} title=\"Passle\">\n            <h2>Overview</h2>\n            ${overview}\n          <//>\n        `\n      }\n    },\n    {\n      path: '/blog',\n      render: ({url, params, query, request}) => { \n        const overview = fetch(url.origin + '/output/blog/overview.html');\n\n        return html`\n          <${Html} title=\"Blog\">\n            <h2>Blogs</h2>\n            ${overview}\n          <//>\n        `\n      }\n    },\n    {\n      path: '/blog/:title',\n      render: ({url, params, query, request}) => {\n        const blog = fetch(url.origin + '/output/blog/' + params.title + '/index.html');\n\n        const blogTitle = title(params.title);\n        const blogUrl = `${url.origin}/blog/${params.title}`;\n\n        return html`\n          <${Html} title=\"${\"Passle blog - \" + blogTitle}\"> \n\n            <${Slot} name=\"head\">\n              <meta property=\"og:site_name\" content=\"Passle blog\">\n              <meta property=\"og:url\" content=\"${blogUrl}\"/>\n              <meta property=\"og:type\" content=\"website\"/>\n              <meta property=\"og:title\" content=\"${blogTitle}\"/>\n              <meta property=\"og:description\" content=\"Passle blog\"/>\n              <meta property=\"og:image\" content=\"${url.origin}/output/og/${params.title}.png\"/>\n              <meta property=\"og:image:alt\" content=\"${blogTitle}\"/>\n\n              <meta content=\"@passle_\" name=\"twitter:site\"/>\n              <meta content=\"@passle_\" name=\"twitter:creator\"/>\n              <meta name=\"twitter:card\" content=\"summary_large_image\"/>\n              <meta name=\"twitter:url\" content=\"${blogUrl}\"/>\n              <meta name=\"twitter:title\" content=\"${blogTitle}\"/>\n              <meta name=\"twitter:image:alt\" content=\"${blogTitle}\">\n              <meta name=\"twitter:description\" content=\"Passle blog\"/>\n              <meta name=\"twitter:image\" content=\"${url.origin}/output/og/${params.title}.png\"/>\n              <meta name=\"twitter:image:src\" content=\"${url.origin}/output/og/${params.title}.png\" />\n\n            <//>\n\n            <article class=\"post\">\n              <${RenderPost} promise=${blog}/>\n            </article>\n          <//>\n        `\n      }\n    },\n    {\n      path: '/thoughts',\n      render: ({url, params, query, request}) => { \n        const overview = fetch(url.origin + '/output/thoughts/overview.html');\n\n        return html`\n          <${Html} title=\"Thoughts\">\n            <h2>Thoughts</h2>\n            <p class=\"larger-text\">\n              Not quite blogs, not quite tweets. Something in between. Likely opinionated, potentially wrong. Subject to change over time.\n            </p>\n            ${overview}\n          <//>\n        `\n      }\n    },\n    {\n      path: '/definitions',\n      render: ({url, params, query, request}) => { \n\n        return html`\n          <${Html} title=\"Definitions\">\n            <h2>Definitions</h2>\n            <article class=\"post\">\n              <dl>\n                <dt id=\"buildless-development\"><a href=\"#buildless-development\">Buildless development</a></dt>\n                <dd>Local development using native ESM and web standards; code that you write runs in the browser without any transformation. Note that this does not include Vite; Vite does a bunch of non-standard transformations and (pre-)bundling out of the box.</dd>\n                \n                <dt id=\"swsr\"><a href=\"#swsr\">SWSR</a></dt>\n                <dd>Service Worker Side Rendering. SSR, but in a Service Worker.</dd>\n                \n                <dt id=\"swtl\"><a href=\"#swtl\">SWTL</a></dt>\n                <dd>Service Worker Templating Language.</dd>\n              </dl>\n            </article>\n          <//>\n        `\n      }\n    },\n    {\n      path: '/thoughts/:title',\n      render: ({url, params, query, request}) => {\n        const thought = fetch(url.origin + '/output/thoughts/' + params.title + '/index.html');\n\n        const thoughtTitle = title(params.title);\n        const thoughtUrl = `${url.origin}/thoughts/${params.title}`;\n\n        return html`\n          <${Html} title=\"${\"Passle blog - \" + thoughtTitle}\">\n            <${Slot} name=\"head\">\n              <meta property=\"og:site_name\" content=\"Passle blog\">\n              <meta property=\"og:url\" content=\"${thoughtUrl}\"/>\n              <meta property=\"og:type\" content=\"website\"/>\n              <meta property=\"og:title\" content=\"${thoughtTitle}\"/>\n              <meta property=\"og:description\" content=\"Passle blog\"/>\n              <meta property=\"og:image\" content=\"${url.origin}/output/og/${params.title}.png\"/>\n              <meta property=\"og:image:alt\" content=\"${thoughtTitle}\"/>\n\n              <meta content=\"@passle_\" name=\"twitter:site\"/>\n              <meta content=\"@passle_\" name=\"twitter:creator\"/>\n              <meta name=\"twitter:card\" content=\"summary_large_image\"/>\n              <meta name=\"twitter:url\" content=\"${thoughtUrl}\"/>\n              <meta name=\"twitter:title\" content=\"${thoughtTitle}\"/>\n              <meta name=\"twitter:image:alt\" content=\"${thoughtTitle}\">\n              <meta name=\"twitter:description\" content=\"Passle blog\"/>\n              <meta name=\"twitter:image\" content=\"${url.origin}/output/og/${params.title}.png\"/>\n              <meta name=\"twitter:image:src\" content=\"${url.origin}/output/og/${params.title}.png\" />\n            <//>\n\n            <article class=\"post\">\n              <${RenderPost} promise=${thought}/>\n            </article>\n          <//>\n        `\n      }\n    },\n    {\n      path: '/foo',\n      render: ({url, params, query, request}) => {\n        return html`\n          <${Html} title=\"Foo\">\n            <h2>Foo</h2>\n          <//>\n        `\n      }\n    },\n  ],\n});", "import { router } from './router.js';\n\nself.addEventListener('install', () => {\n  self.skipWaiting();\n});\n\nself.addEventListener('activate', (event) => {\n  event.waitUntil(\n    clients.claim().then(() => {\n      self.clients.matchAll().then((clients) => {\n        clients.forEach((client) =>\n          client.postMessage({ type: 'SW_ACTIVATED' })\n        );\n      });\n    })\n  );\n});\n\nself.addEventListener('fetch', (event) => {\n  if (event.request.mode === 'navigate') {\n    event.respondWith(router.handleRequest(event.request));\n  }\n});"],
  "mappings": "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",
  "names": ["COMPONENT_SYMBOL", "AWAIT_SYMBOL", "SLOT_SYMBOL", "TEXT", "COMPONENT", "NONE", "PROP", "CHILDREN", "SET_PROP", "PROP_VAL", "html", "statics", "dynamics", "d", "acc", "s", "i", "MODE", "COMPONENT_MODE", "PROP_MODE", "componentStack", "result", "component", "COMPONENT_SYMBOL", "j", "property", "name", "value", "quote", "val", "currentComponent", "Await", "promise", "children", "c", "AWAIT_SYMBOL", "when", "condition", "template", "hasGetReader", "obj", "streamAsyncIterator", "stream", "reader", "decoder", "done", "value", "handleIterator", "iterable", "chunk", "handle", "promises", "_render", "v", "AWAIT_SYMBOL", "promise", "template", "acc", "prop", "id", "data", "error", "html", "COMPONENT_SYMBOL", "children", "slots", "child", "SLOT_SYMBOL", "name", "stringified", "_a", "render", "p", "val", "nextPromise", "__template", "Router", "routes", "fallback", "plugins", "baseHref", "route", "request", "url", "matchedRoute", "match", "query", "params", "plugin", "result", "e", "HtmlResponse", "template", "options", "iterator", "render", "encoder", "stream", "controller", "value", "done", "Slot", "SLOT_SYMBOL", "ENV", "_a", "Html", "title", "children", "slots", "html", "__template", "ENV", "title", "str", "RenderPost", "promise", "html", "Await", "b", "status", "data", "error", "when", "i", "router", "Router", "url", "params", "query", "request", "overview", "Html", "blog", "blogTitle", "title", "blogUrl", "Slot", "thought", "thoughtTitle", "thoughtUrl", "event", "clients", "client", "router"]
}
